{"version":3,"sources":["styles/theme.ts","utils/colorUtils.ts","context/ColorContext.tsx","context/SaveContext.tsx","components/atoms/Tooltip.tsx","components/atoms/SwapButton.tsx","components/atoms/ColorTextInput.tsx","components/atoms/tooltipPlugins.ts","components/atoms/ColorPicker.tsx","components/atoms/CopyButton.tsx","components/atoms/FormatButton.tsx","components/molecules/ColorInputField.tsx","components/molecules/InputLabel.tsx","styles/breakpoints.ts","components/organisms/ColorInputs.tsx","components/atoms/OutlineButton.tsx","components/atoms/DeleteAllButton.tsx","components/atoms/SaveButton.tsx","components/molecules/SaveButtonGroup.tsx","components/atoms/ColorTile.tsx","components/molecules/ColorSwatch.tsx","components/organisms/SavedColors.tsx","components/atoms/Ratio.tsx","components/molecules/ContrastRatio.tsx","components/molecules/PreviewText.tsx","components/atoms/Rating.tsx","components/molecules/WcagResults.tsx","components/organisms/PreviewContent.tsx","components/molecules/Footer.tsx","components/atoms/SkipLink.tsx","styles/GlobalStyles.ts","App.tsx","index.tsx"],"names":["defaultColors","variables","css","getRgbString","rgbColor","colord","toRgbString","getContrast","backgroundRgb","foregroundRgb","backgroundColor","foregroundColor","contrast","hexToRgb","hex","color","toRgb","r","g","b","extend","a11yPlugin","ColorContext","createContext","ColorContextProvider","children","useState","rgb","input","inputFormat","validInput","background","setBackground","foreground","setForeground","setContrast","updateBackground","calcContrast","toHex","document","documentElement","style","setProperty","updateContrast","updateForeground","data","handleSwapColors","oldBackground","oldForeground","handleChangeFormat","target","isBackground","colorInput","colorFormat","toHslString","toUpperCase","newColor","Provider","value","SaveContext","SaveContextProvider","colorsInStorage","window","localStorage","getItem","initialState","JSON","parse","savedColors","setSavedColors","updateSavedColor","colorArray","setItem","stringify","TooltipBox","styled","div","Arrow","ChildrenWrapper","span","Tooltip","content","wrapperStyles","tooltipBoxStyles","tippyProps","render","attrs","id","Button","button","tooltipWrapperStyles","margin","SwapButton","useContext","trigger","placement","offset","touch","size","onClick","Input","props","valid","HelperText","p","visible","ColorTextInput","type","onChange","event","inputColor","getFormat","isValid","newState","handleInputChange","spellCheck","hideOnEsc","name","defaultValue","fn","instance","onKeyDown","code","hide","onShow","addEventListener","onHide","removeEventListener","PickerButton","RgbPicker","RgbColorPicker","styles","buttonWrapper","position","left","tooltipBox","padding","borderRadius","ColorPicker","targetColor","rgbPicker","inputValue","format","output","getColorString","handlePickerChange","interactive","plugins","appendTo","getElementById","CopyButton","setTimeout","hideOnClick","copyToClipboard","currentTarget","blur","FormatButton","Container","ButtonGroup","ColorInputField","Label","label","InfoIcon","MdInfoOutline","height","InputLabel","labelFor","title","tooltipText","htmlFor","undefined","innerWidth","tabIndex","bp","ColorInputBlock","ColorInputs","hasIcon","hoverColor","OutlineButton","anchor","hrefLink","icon","onClickEvent","anchorProps","href","rel","as","DeleteAllButton","SaveButton","newSavedColors","time","Date","now","length","shift","SaveButtonGroup","TileBtn","fg","bg","DeleteBtn","ColorTile","handleLoad","handleDelete","ColorSwatch","map","key","find","index","indexOf","splice","SavedColors","Value","OutOf","Ratio","roundedContrast","Math","round","toFixed","ContrastRatio","largeText","Text","Title","PreviewText","pass","Rating","memo","WcagResults","contrastRatio","aaNormal","aaLarge","aaaNormal","aaaLarge","Results","Preview","Links","PreviewContent","FooterContainer","footer","a","Footer","SkipLink","GlobalStyles","createGlobalStyle","ColorControlSection","section","ColorControl","Divider","PreviewSection","App","ReactDOM","StrictMode"],"mappings":"2MAEaA,EACC,UADDA,EAEC,UA0BCC,EAvBGC,YAAH,gnBAEKF,EACAA,G,QCwBb,SAASG,EAAaC,GAC3B,OAAOC,YAAOD,GAAUE,cAMnB,SAASC,EAAYC,EAAyBC,GACnD,IAAMC,EAAkBL,YAAOG,GACzBG,EAAkBN,YAAOI,GAE/B,OAAOC,EAAgBE,SAASD,GAoB3B,SAASE,EAASC,GACvB,IAAMC,EAAQV,YAAOS,GAAKE,QAC1B,MAAO,CAAEC,EAAGF,EAAME,EAAGC,EAAGH,EAAMG,EAAGC,EAAGJ,EAAMI,GAhE5CC,YAAO,CAACC,M,WCmBFC,EAAeC,wBAAgC,IAErD,SAASC,EAAT,GAAwE,IAAxCC,EAAuC,EAAvCA,SAC9B,EAAoCC,mBAAgB,CAClDC,IAAKd,EAASb,GACd4B,MAAO5B,EACP6B,YAAa,MACbC,YAAY,IAJd,mBAAOC,EAAP,KAAmBC,EAAnB,KAMA,EAAoCN,mBAAgB,CAClDC,IAAKd,EAASb,GACd4B,MAAO5B,EACP6B,YAAa,MACbC,YAAY,IAJd,mBAAOG,EAAP,KAAmBC,EAAnB,KAOA,EAAgCR,mBAASnB,EAAYwB,EAAWJ,IAAKM,EAAWN,MAAhF,mBAAOf,EAAP,KAAiBuB,EAAjB,KAEMC,EAAmB,SAACrB,GAAuC,IAAzBsB,IAAwB,yDACxDvB,EAAMT,YAAOU,EAAMY,KAAKW,QAC9BN,EAAcjB,GACdwB,SAASC,gBAAgBC,MAAMC,YAAY,eAAgB5B,GAC3DuB,GAAgBM,EAAe5B,EAAMY,IAAKM,EAAWN,MAGjDiB,EAAmB,SAAC7B,GAAuC,IAAzBsB,IAAwB,yDACxDvB,EAAMT,YAAOU,EAAMY,KAAKW,QAC9BJ,EAAcnB,GACdwB,SAASC,gBAAgBC,MAAMC,YAAY,eAAgB5B,GAC3DuB,GAAgBM,EAAeZ,EAAWJ,IAAKZ,EAAMY,MAGjDgB,EAAiB,SAACnC,EAAyBC,GAC/C,IAAIG,EAAWL,EAAYC,EAAeC,GAC1C0B,EAAYvB,IAsCRiC,EAAO,CACXd,aACAK,mBACAH,aACAW,mBACAhC,WACA+B,iBACAG,iBA1CuB,WACvB,IAAMC,EAAgBhB,EAChBiB,EAAgBf,EACtBG,EAAiBH,GACjBW,EAAiBG,GACjBJ,EAAeI,EAAcpB,IAAKqB,EAAcrB,MAsChDsB,mBAlCyB,SAACC,GAC1B,IAAMC,EAA0B,eAAXD,EAEfnC,EAAQoC,EAAepB,EAAaE,EACtCmB,EAAarC,EAAMa,MACnByB,EAActC,EAAMc,YAExB,OAAQwB,GACN,IAAK,MACHD,EAAa/C,YAAOU,EAAMY,KAAKrB,cAC/B+C,EAAc,MACd,MACF,IAAK,MACHD,EAAa/C,YAAOU,EAAMY,KAAK2B,cAC/BD,EAAc,MACd,MACF,IAAK,MACHD,EAAa/C,YAAOU,EAAMY,KAAKW,QAAQiB,cACvCF,EAAc,MAIlB,IAAMG,EAAQ,2BAAQzC,GAAR,IAAea,MAAOwB,EAAYvB,YAAawB,EAAavB,YAAY,IACtFqB,EAAef,EAAiBoB,GAAU,GAASZ,EAAiBY,GAAU,KAchF,OAAO,cAAClC,EAAamC,SAAd,CAAuBC,MAAOb,EAA9B,SAAqCpB,IC3F9C,IAAMkC,EAAcpC,wBAA+B,IAEnD,SAASqC,EAAT,GAAsE,IAAD,EAAtCnC,EAAsC,EAAtCA,SACvBoC,EAAe,UAAGC,OAAOC,aAAaC,QAAQ,iBAA/B,QAA4C,GAC3DC,EAA4BJ,EAAkBK,KAAKC,MAAMN,GAAmB,GAElF,EAAsCnC,mBAASuC,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAOMxB,EAAO,CACXuB,cACAC,iBACAC,iBARuB,SAACC,GACxBF,EAAeE,GACfT,OAAOC,aAAaS,QAAQ,SAAUN,KAAKO,UAAUF,MASvD,OAAO,cAACZ,EAAYF,SAAb,CAAsBC,MAAOb,EAA7B,SAAoCpB,I,6FCtBvCiD,EAAaC,IAAOC,IAAV,4bAuBVC,EAAQF,IAAOC,IAAV,0RAsBLE,EAAkBH,IAAOI,KAAV,8EAuBNC,I,MAAAA,EAhBf,YAAiH,IAA9FvD,EAA6F,EAA7FA,SAAUwD,EAAmF,EAAnFA,QAAmF,IAA1EC,qBAA0E,MAA1D,GAA0D,MAAtDC,wBAAsD,MAAnC,GAAmC,EAA5BC,EAA4B,iBAC9G,OACE,cAAC,IAAD,yBACEC,OAAQ,SAACC,GAAD,OACN,eAACZ,EAAD,2BAAgBY,GAAhB,IAAuB7C,MAAO0C,EAA9B,UACGF,EACD,cAACJ,EAAD,CAAOU,GAAG,QAAQ,oBAAkB,WAGpCH,GAPN,aASE,cAACN,EAAD,CAAiBrC,MAAOyC,EAAxB,SAAwCzD,QCpExC+D,EAASb,IAAOc,OAAV,+kBAyBNC,EAAuB,CAC3BC,OAAQ,uBAGK,SAASC,IACtB,IAAQ9C,EAAqB+C,qBAAWvE,GAAhCwB,iBAER,OACE,cAAC,EAAD,CACEmC,QAAS,4CACTa,QAAQ,qBACRC,UAAU,QACVC,OAAQ,CAAC,EAAG,IACZC,OAAO,EACPf,cAAeQ,EANjB,SAQE,cAACF,EAAD,CAAQ,aAAW,cAAnB,SACE,cAAC,IAAD,CAAYU,KAAM,GAAIC,QAASrD,QCrCvC,IAAMsD,EAAQzB,IAAO/C,MAAV,+dAOe,SAACyE,GAAD,OAAYA,EAAMC,MAAQ,cAAgB,sBAUxC,SAACD,GAAD,OAAYA,EAAMC,MAAQ,cAAgB,sBAIhEC,EAAa5B,IAAO6B,EAAV,2IAKA,SAACH,GAAD,OAAYA,EAAMI,QAAU,UAAY,YA2CzCC,I,IAAAA,EAxCf,YAA0D,IAAhCxD,EAA+B,EAA/BA,OACxB,EAAuE2C,qBAAWvE,GAA1ES,EAAR,EAAQA,WAAYK,EAApB,EAAoBA,iBAAkBH,EAAtC,EAAsCA,WAAYW,EAAlD,EAAkDA,iBAE5CO,EAA0B,eAAXD,EACfnC,EAAQoC,EAAepB,EAAaE,EACtCH,EAAaf,EAAMe,WAoBvB,OACE,qCACE,cAACsE,EAAD,CACEO,KAAK,OACLpB,GAAIrC,EACJQ,MAAO3C,EAAMa,MACbgF,SAAU,SAACC,GAAD,OAxBU,SAACA,GACzB,IAAMjF,EAAQiF,EAAM3D,OAAOQ,MACrBoD,EAAazG,YAAOuB,GAEtBD,EAAMd,EAASe,GACfC,EAAckF,YAAUnF,IAC5BE,EAAagF,EAAWE,aAItBrF,EAAMZ,EAAMY,IACZE,EAAcd,EAAMc,aAGtB,IAAMoF,EAAW,CAAEtF,MAAKC,QAAOC,cAAaC,cAC5CqB,EAAef,EAAiB6E,GAAYrE,EAAiBqE,GASpCC,CAAkBL,IACvCP,MAAOxE,EACPqF,YAAY,IAEd,cAACZ,EAAD,CAAYE,SAAU3E,EAAtB,+B,QCrEOsF,EAAoB,CAC/BC,KAAM,YACNC,cAAc,EACdC,GAH+B,SAG5BC,GACD,SAASC,EAAUZ,GACE,WAAfA,EAAMa,MACRF,EAASG,OAIb,MAAO,CACLC,OADK,WAEHrF,SAASsF,iBAAiB,UAAWJ,IAEvCK,OAJK,WAKHvF,SAASwF,oBAAoB,UAAWN,OCP1CO,EAAerD,IAAOc,OAAV,+UAGF,SAACY,GAAD,MAA6B,eAAjBA,EAAMnD,OAA0B,oBAAsB,uBAY5E+E,EAAYtD,YAAOuD,IAAPvD,CAAH,kGAQTwD,EAAS,CACbC,cAAe,CACbC,SAAU,WACVC,KAAM,UAERC,WAAY,CACVC,QAAS,OACTC,aAAc,WAuCHC,I,EAAAA,EAnCf,YAAoD,IAA7BxF,EAA4B,EAA5BA,OACrB,EAAuE2C,qBAAWvE,GAA1ES,EAAR,EAAQA,WAAYK,EAApB,EAAoBA,iBAAkBH,EAAtC,EAAsCA,WAAYW,EAAlD,EAAkDA,iBAE5CO,EAA0B,eAAXD,EACfyF,EAAcxF,EAAepB,EAAaE,EAY1C2G,EAAY,cAACX,EAAD,CAAWlH,MAAO4H,EAAYhH,IAAKiF,SAAU,SAAC7F,GAAD,OAVpC,SAACA,GAE1B,IAAMc,EAAc8G,EAAY9G,YAC1BgH,EP7CH,SAAwB9H,EAAe+H,GAC5C,IAAIC,EAAS,KACb,OAAQD,GACN,IAAK,MACHC,EAAShI,EAAMuB,QAAQiB,cACvB,MACF,IAAK,MACHwF,EAAShI,EAAMT,cACf,MACF,IAAK,MACHyI,EAAShI,EAAMuC,cACf,MACF,QACEyF,EAAShI,EAAMuB,QAGnB,OAAOyG,EO6BcC,CAAe3I,YAAOU,GAAQc,GAG3CoF,EAAW,CAAEtF,IAAKZ,EAAOa,MAAOiH,EAAYhH,cAAaC,YAAY,GAC3EqB,EAAef,EAAiB6E,GAAYrE,EAAiBqE,GAGWgC,CAAmBlI,MAE7F,OACE,cAAC,EAAD,CACEkE,QAAS2D,EACT9C,QAAQ,QACRC,UAAU,SACVC,OAAQ,CAAC,IAAK,GACdkD,aAAa,EACbhE,cAAeiD,EAAOC,cACtBjD,iBAAkBgD,EAAOI,WACzBY,QAAS,CAAC/B,GACVgC,SAAU,kBAAM7G,SAAS8G,eAAT,sBAAuCnG,KATzD,SAWE,cAAC8E,EAAD,CAAc9E,OAAQA,EAAQ,aAAW,yB,SCpEzCsC,GAASb,IAAOc,OAAV,sLAsCG6D,I,GAAAA,GA1Bf,YAAkD,IAA5BpG,EAA2B,EAA3BA,OACpB,OACE,cAAC,EAAD,CACE+B,QAAS,oDACTa,QAAQ,QACRE,OAAQ,EAAE,GAAI,IACd4B,OAAQ,SAACJ,GACP+B,YAAW,kBAAM/B,EAASG,SAAQ,MAEpC6B,aAAa,EAPf,SASE,cAAC,GAAD,CACErD,QAAS,SAACU,GACR,IACMgC,EADUtG,SAAS8G,eAAenG,GACbQ,MAC3B+F,aAAgBZ,GAChBhC,EAAM6C,cAAcC,QAEtB,aAAW,oBAPb,SASE,cAAC,IAAD,CAAezD,KAAM,UC/BvBV,GAASb,IAAOc,OAAV,wLAwBGmE,I,MAAAA,GAZf,YAAsD,IAA9B1G,EAA6B,EAA7BA,OACdD,EAAuB4C,qBAAWvE,GAAlC2B,mBAER,OACE,cAAC,EAAD,CAASgC,QAAS,oDAA4Be,OAAQ,EAAE,GAAI,IAAKF,QAAQ,qBAAzE,SACE,cAAC,GAAD,CAAQK,QAAS,kBAAMlD,EAAmBC,IAAS,aAAW,sBAA9D,SACE,cAAC,IAAD,CAAagD,KAAM,UClBrB2D,GAAYlF,IAAOC,IAAV,+JASTkF,GAAcnF,IAAOC,IAAV,uEAmBFmF,I,SAAAA,GAdf,YAA4D,IAAjC7G,EAAgC,EAAhCA,OACzB,OACE,eAAC2G,GAAD,WACE,cAAC,EAAD,CAAgB3G,OAAQA,IACxB,cAAC,EAAD,CAAaA,OAAQA,IACrB,qBAAKqC,GAAE,sBAAiBrC,KACxB,eAAC4G,GAAD,WACE,cAAC,GAAD,CAAc5G,OAAQA,IACtB,cAAC,GAAD,CAAYA,OAAQA,WCvBtB2G,GAAYlF,IAAOC,IAAV,yHAOToF,GAAQrF,IAAOsF,MAAV,oHAOLC,GAAWvF,YAAOwF,IAAPxF,CAAH,4IAURe,GAAuB,CAC3B0E,OAAQ,UAqBKC,I,SAAAA,GAlBf,YAAwE,IAAlDC,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,YACrC,OACE,eAAC,GAAD,WACE,cAACR,GAAD,CAAOS,QAASH,EAAhB,SAA2BC,SACVG,IAAhBF,EACC,cAAC,EAAD,CACEzE,UAAWjC,OAAO6G,YAAc,IAAM,QAAU,MAChD1F,QAAS,4BAAIuF,IACbtF,cAAeQ,GACfI,QAAQ,qBAJV,SAME,cAACoE,GAAD,CAAUhE,KAAM,GAAI0E,SAAU,MAE9B,SCnDGC,GAEP,QAFOA,GAGP,SCGAhB,GAAYlF,IAAOC,IAAV,gPAQQiG,GAA0BA,IAK3CC,GAAkBnG,IAAOC,IAAV,qOAQIiG,GAA0BA,IAMpC,SAASE,KACtB,OACE,eAAC,GAAD,WACE,eAACD,GAAD,WACE,cAAC,GAAD,CAAYP,MAAM,aAAaD,SAAS,aAAaE,YAAY,2BACjE,cAAC,GAAD,CAAiBtH,OAAO,kBAE1B,cAAC0C,EAAD,IACA,eAACkF,GAAD,WACE,cAAC,GAAD,CAAYP,MAAM,aAAaD,SAAS,aAAaE,YAAY,2BACjE,cAAC,GAAD,CAAiBtH,OAAO,qBC/BhC,IAAMsC,GAASb,IAAOc,OAAV,oaAEC,SAACY,GAAD,OAAYA,EAAM2E,QAAU,8BAAgC,mBAKnD,SAAC3E,GAAD,OAAWA,EAAMpE,cAE5B,SAACoE,GAAD,OAAWA,EAAMpE,cAOtB,SAACoE,GAAD,kCAAgCA,EAAM4E,eAKtC,SAAC5E,GAAD,kCAAgCA,EAAM4E,eAqC7BC,OAjCf,YAQwB,IAAD,IAPrBC,cAOqB,SANrB1J,EAMqB,EANrBA,SAMqB,IALrBV,aAKqB,MALb,eAKa,EAJrBkK,EAIqB,EAJrBA,WACAG,EAGqB,EAHrBA,SACAC,EAEqB,EAFrBA,KACAC,EACqB,EADrBA,aAGMC,EAAcJ,EAChB,CACEK,KAAMJ,EACNlI,OAAQ,SACRuI,IAAK,cAEP,GAEJ,OACE,eAAC,GAAD,2BACMF,GADN,IAEEG,GAAIP,EAAS,IAAM,SACnBlJ,WAAYlB,EACZkK,WAAYA,EACZD,aAAkBN,IAATW,EACTlF,QAASmF,EANX,UAQGD,EACD,+BAAO5J,SC5DE,SAASkK,KACtB,IAAQrH,EAAqBuB,qBAAWlC,GAAhCW,iBAMR,OACE,cAAC,GAAD,CACEvD,MAAM,mBACNkK,WAAW,yBACXI,KAAM,cAAC,IAAD,CAAUnF,KAAM,KACtBoF,aATkB,WACpBhH,EAAiB,KAIjB,wB,gBCPW,SAASsH,KACtB,MAA0C/F,qBAAWlC,GAA7CS,EAAR,EAAQA,YAAaE,EAArB,EAAqBA,iBACrB,EAAmCuB,qBAAWvE,GAAtCS,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,WAcpB,OACE,cAAC,GAAD,CACElB,MAAM,eACNkK,WAAW,qBACXI,KAAM,cAAC,IAAD,CAAQnF,KAAM,KACpBoF,aAfkB,WACpB,IAAMO,EAAc,uBAAOzH,GAAP,CAAoB,CAAErC,aAAYE,aAAY6J,KAAMC,KAAKC,SAEzEH,EAAeI,OALI,IAMrBJ,EAAeK,QAGjB5H,EAAiBuH,IAIjB,wBCnBJ,IAAM/B,GAAcnF,IAAOC,IAAV,uHAgBFuH,I,SAAAA,GATf,WACE,OACE,eAAC,GAAD,WACE,cAACP,GAAD,IACA,cAACD,GAAD,QCLA9B,GAAYlF,IAAOC,IAAV,4EAKTwH,GAAUzH,IAAOc,OAAV,yUAMS,SAACY,GAAD,OAAWA,EAAMgG,MAEjB,SAAChG,GAAD,OAAWA,EAAMiG,MAC5B,SAACjG,GAAD,OAAWA,EAAMgG,MAStBE,GAAY5H,IAAOc,OAAV,wXAsCA+G,I,GAAAA,GAlBf,YAA0F,IAArEzK,EAAoE,EAApEA,WAAYE,EAAwD,EAAxDA,WAAYwK,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,aACvD,OACE,eAAC,GAAD,WACE,cAACN,GAAD,CACEE,GAAIvK,EACJsK,GAAIpK,EACJkE,QAASsG,EACT,kCAA0B1K,EAA1B,4BAAwDE,GAJ1D,gBAQA,cAACsK,GAAD,CAAWpG,QAASuG,EAAc,aAAW,qBAA7C,SACE,cAAC,IAAD,CAASxG,KAAM,WC1DjB2D,GAAYlF,IAAOC,IAAV,kGAgDA+H,I,YAAAA,GAzCf,WACE,MAA+D9G,qBAAWvE,GAAlEc,EAAR,EAAQA,iBAAkBQ,EAA1B,EAA0BA,iBAAkBD,EAA5C,EAA4CA,eAC5C,EAAwCkD,qBAAWlC,GAA3CS,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eAwBrB,OACE,cAAC,GAAD,UACGD,EAAYwI,KAAI,SAAC7L,GAAD,OACf,cAAC,GAAD,CAEEgB,WAAY5B,EAAaY,EAAMgB,WAAWJ,KAC1CM,WAAY9B,EAAaY,EAAMkB,WAAWN,KAC1C8K,WAAY,kBA5BD,SAACI,GAClB,MAAmCzI,EAAY0I,MAAK,SAAC/L,GAAD,OAAWA,EAAM+K,OAASe,KAAtE9K,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,WAGpBG,EAAiBL,GAAY,GAC7Ba,EAAiBX,GAAY,GAC7BU,EAAeZ,EAAWJ,IAAKM,EAAWN,KAsBlB8K,CAAW1L,EAAM+K,OACnCY,aAAc,kBAnBD,SAACG,GACpB,IAAM9L,EAAQqD,EAAY0I,MAAK,SAAC/L,GAAD,OAAWA,EAAM+K,OAASe,KACnDE,EAAQ3I,EAAY4I,QAAQjM,GAG5B8K,EAAc,aAAOzH,GAC3ByH,EAAeoB,OAAOF,EAAO,GAC7B1I,EAAewH,GACf/H,OAAOC,aAAaS,QAAQ,SAAUN,KAAKO,UAAUoH,IAW3Ba,CAAa3L,EAAM+K,QAJlC/K,EAAM+K,YCvCfjC,GAAYlF,IAAOC,IAAV,+TAK+BiG,GAKvBA,IAOR,SAASqC,KACtB,OACE,eAAC,GAAD,CAAW3H,GAAG,eAAd,UACE,8CACA,cAAC,GAAD,IACA,cAAC,GAAD,OCtBN,I,MAAMsE,GAAYlF,IAAOC,IAAV,4HAIQiG,IAKjBsC,GAAQxI,IAAO6B,EAAV,oLAMYqE,IAKjBuC,GAAQzI,IAAO6B,EAAV,4JASI,SAAS6G,KACtB,IAAMzM,EAAaiF,qBAAWvE,GAAxBV,SACA0M,GAAmBC,KAAKC,MAAiB,GAAX5M,GAAiB,IAAI6M,QAAQ,GAEjE,OACE,eAAC,GAAD,WACE,cAACN,GAAD,UAAQG,IACR,cAACF,GAAD,qBCrCN,I,SAAMvD,GAAYlF,IAAOC,IAAV,8LAKQiG,IAMjBb,GAAQrF,IAAO6B,EAAV,2PAOYqE,IAOR,SAAS6C,KACtB,OACE,eAAC,GAAD,WACE,cAAC,GAAD,6BACA,cAACL,GAAD,OCzBN,IAAMxD,GAAYlF,IAAOC,IAAV,yEAEA,SAACyB,GAAD,OAAYA,EAAMsH,UAAY,OAAS,UAGhDC,GAAOjJ,IAAO6B,EAAV,2DAIJqH,GAAQlJ,YAAOiJ,GAAPjJ,CAAH,8EAcImJ,I,MAAAA,GATf,YAAgF,IAAzDrM,EAAwD,EAAxDA,SAAU8I,EAA8C,EAA9CA,MAA8C,IAAvCoD,iBAAuC,SAC7E,OACE,eAAC,GAAD,CAAWA,UAAWA,EAAtB,UACE,cAACE,GAAD,UAAQtD,IACR,cAACqD,GAAD,UAAOnM,QCjBPoI,GAAYlF,IAAOC,IAAV,uFAGJ,SAACyB,GAAD,OAAYA,EAAM0H,KAAO,eAAiB,sBAG/CH,GAAOjJ,IAAO6B,EAAV,4JAKaqE,IAKvB,SAASmD,GAAT,GAAwC,IAAtBD,EAAqB,EAArBA,KAChB,OACE,eAAC,GAAD,CAAWA,KAAMA,EAAjB,UACGA,EAAO,cAAC,IAAD,CAAS7H,KAAM,KAAS,cAAC,IAAD,CAASA,KAAM,KAC/C,cAAC,GAAD,UAAO6H,EAAO,OAAS,YAKdE,I,YAAAA,kBAAKD,IC5BL,SAASE,KACtB,IzB6C6BC,EyB7CrBvN,EAAaiF,qBAAWvE,GAAxBV,SAER,EzBiDO,EANsBuN,EyB3CmCvN,IzB4C9B,IAClBuN,GAAiB,EACfA,GAAiB,EAClBA,GAAiB,KyB/ClC,mBAAOC,EAAP,KAAiBC,EAAjB,KAA0BC,EAA1B,KAAqCC,EAArC,KAGA,OACE,kCACE,gCACE,+BACE,uBACA,6CACA,6BACE,cAAC,EAAD,CAAStJ,QAAS,yEAAuCc,UAAU,SAASD,QAAQ,qBAApF,SACE,mBAAG8E,SAAU,EAAb,iCAKR,kCACE,+BACE,oCACA,6BACE,cAAC,GAAD,CAAQmD,KAAMK,MAEhB,6BACE,cAAC,GAAD,CAAQL,KAAMM,SAGlB,+BACE,qCACA,6BACE,cAAC,GAAD,CAAQN,KAAMO,MAEhB,6BACE,cAAC,GAAD,CAAQP,KAAMQ,eCjC1B,I,YAAM1E,GAAYlF,IAAOC,IAAV,sNAOQiG,IAMjB2D,GAAU7J,IAAOC,IAAV,mbAYUiG,GAKAA,IAMjB4D,GAAU9J,IAAOC,IAAV,6GAIUiG,IAKjB6D,GAAQ/J,IAAOC,IAAV,kOAQYiG,IAKR,SAAS8D,KACtB,OACE,eAAC,GAAD,CAAWpJ,GAAG,UAAd,UACE,wDACA,eAACiJ,GAAD,WACE,cAACd,GAAD,IACA,cAACQ,GAAD,OAEF,eAACO,GAAD,WACE,cAAC,GAAD,CAAad,WAAS,EAACpD,MAAM,yBAA7B,sJAIA,cAAC,GAAD,CAAaA,MAAM,qBAAnB,yVAMA,eAACmE,GAAD,WACE,cAAC,GAAD,CACEvD,QAAM,EACNC,SAAS,iFACTrK,MAAM,oBACNsK,KAAM,cAAC,IAAD,CAAanF,KAAM,KAJ3B,sBAQA,cAAC,GAAD,CACEiF,QAAM,EACNC,SAAS,wCACTrK,MAAM,oBACNsK,KAAM,cAAC,IAAD,CAAanF,KAAM,KAJ3B,qCC3FV,I,GAAM0I,GAAkBjK,IAAOkK,OAAV,qHAOFlK,IAAOmK,EAAV,0IAUHnK,IAAO6B,EAAV,wHAOO7B,IAAOmK,EAAV,8bA0BC,SAASC,KACtB,OACE,cAACH,GAAD,ICrDJ,I,kBAmBeI,GAnBErK,IAAOmK,EAAV,yWCmGCG,GAjGMC,YAAH,y9CACdjP,EA0BqB4K,GAgCAA,GAYAA,IChEnBhB,GAAYlF,IAAOC,IAAV,iLAMQiG,IAKjBsE,GAAsBxK,IAAOyK,QAAV,+jBAcFvE,IAWjBwE,GAAe1K,IAAOC,IAAV,uQAKKiG,GAKAA,IAKjByE,GAAU3K,IAAOC,IAAV,iMAKUiG,GAA0BA,IAM3C0E,GAAiB5K,IAAOyK,QAAV,qTAQGvE,IASR,SAAS2E,KACtB,OACE,eAAChO,EAAD,WACE,cAAC,GAAD,IACA,eAAC,GAAD,WACE,cAAC,GAAD,CAAUgK,KAAK,gBAAf,kCACA,cAAC,GAAD,CAAUA,KAAK,WAAf,kCACA,eAAC2D,GAAD,WACE,eAACE,GAAD,WACE,cAACtE,GAAD,IACA,cAACuE,GAAD,IACA,cAAC1L,EAAD,UACE,cAACsJ,GAAD,SAGJ,cAAC6B,GAAD,OAEF,cAACQ,GAAD,UACE,cAACZ,GAAD,YCxGVc,IAASpK,OACP,cAAC,IAAMqK,WAAP,UACE,cAACF,GAAD,MAEFjN,SAAS8G,eAAe,W","file":"static/js/main.e38eb178.chunk.js","sourcesContent":["import { css } from \"styled-components\";\n\nexport const defaultColors = {\n  background: \"#172F36\", // rgb(23, 47, 54) or hsl(194, 40%, 15%)\n  foreground: \"#FFFFFF\", // rgb(255, 255, 255) or hsl(0, 0%, 100%)\n};\n\nconst variables = css`\n  :root {\n    --background: ${defaultColors.background};\n    --foreground: ${defaultColors.foreground};\n\n    --black: #0c0e0f;\n    --darkest-gray: #464646;\n    --dark-gray: #717171;\n    --gray: #c3c3c3;\n    --white: #ffffff;\n    --white-hover: rgba(255, 255, 255, 0.2);\n    --red: #ff0000;\n    --light-red: #ff6e60;\n    --light-red-hover: rgba(255, 110, 96, 0.2);\n    --green: #67e900;\n    --green-hover: rgba(103, 233, 0, 0.2);\n    --cyan: #48c8ff;\n\n    --font-sans: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\",\n      \"Droid Sans\", \"Helvetica Neue\", sans-serif;\n  }\n`;\n\nexport default variables;\n","import { Colord, colord, extend } from \"colord\";\nimport a11yPlugin from \"colord/plugins/a11y\";\nimport { AcceptedFormat, RgbColor } from \"../types/colors.types\";\nextend([a11yPlugin]); // Uses the accessibility plugin from colord\n\n/**\n * Get the string representation of the color according to the given color format.\n * @returns String representation of the color\n * @example\n * const color = colord(\"#ff0000\");\n * getColorString(color, \"hsl\");  // Returns \"hsl(0, 100%, 50%)\"\n */\nexport function getColorString(color: Colord, format: AcceptedFormat) {\n  let output = null;\n  switch (format) {\n    case \"hex\":\n      output = color.toHex().toUpperCase();\n      break;\n    case \"rgb\":\n      output = color.toRgbString();\n      break;\n    case \"hsl\":\n      output = color.toHslString();\n      break;\n    default:\n      output = color.toHex();\n  }\n\n  return output;\n}\n\n/**\n * Convert a RGB object into a string.\n */\nexport function getRgbString(rgbColor: RgbColor) {\n  return colord(rgbColor).toRgbString();\n}\n\n/**\n * Gets the contrast ratio between background and foreground colors.\n */\nexport function getContrast(backgroundRgb: RgbColor, foregroundRgb: RgbColor) {\n  const backgroundColor = colord(backgroundRgb);\n  const foregroundColor = colord(foregroundRgb);\n\n  return backgroundColor.contrast(foregroundColor);\n}\n\n/**\n * Get the WCAG 2.0 Level AA & AAA ratings given a contrast ratio.\n * @returns `[aaNormal, aaLarge, aaaNormal, aaaLarge]`. For each item, `true` means it passes the test while `false` means it fails the test\n */\nexport function getWcagRatings(contrastRatio: number): [boolean, boolean, boolean, boolean] {\n  const aaNormal = contrastRatio >= 4.5;\n  const aaLarge = contrastRatio >= 3;\n  const aaaNormal = contrastRatio >= 7;\n  const aaaLarge = contrastRatio >= 4.5;\n\n  return [aaNormal, aaLarge, aaaNormal, aaaLarge];\n}\n\n/**\n * Converts HEX string to RGB object. `Colord.toRgb()` is not used because it always returns a RGBA object\n * with an extra unwanted alpha field of `a: number`.\n */\nexport function hexToRgb(hex: string): RgbColor {\n  const color = colord(hex).toRgb();\n  return { r: color.r, g: color.g, b: color.b };\n}\n","import { createContext, useState } from \"react\";\nimport { colord } from \"colord\";\nimport { defaultColors } from \"../styles/theme\";\nimport { getContrast, hexToRgb } from \"../utils/colorUtils\";\nimport { Color, RgbColor, Target } from \"../types/colors.types\";\n\ntype ColorContextProviderProps = {\n  children: React.ReactNode;\n};\n\ntype ColorContextType = {\n  background: Color;\n  updateBackground: (color: Color, calcContrast?: boolean) => void;\n  foreground: Color;\n  updateForeground: (color: Color, calcContrast?: boolean) => void;\n  contrast: number;\n  updateContrast: (backgroundRgb: RgbColor, foregroundRgb: RgbColor) => void;\n  handleSwapColors: () => void;\n  handleChangeFormat: (target: Target) => void;\n};\n\n// Color state of the app\nconst ColorContext = createContext<ColorContextType>({} as ColorContextType);\n\nfunction ColorContextProvider({ children }: ColorContextProviderProps) {\n  const [background, setBackground] = useState<Color>({\n    rgb: hexToRgb(defaultColors.background), // eg. { r: 19, g: 42, b: 49 }\n    input: defaultColors.background, // eg. \"#132A31\"\n    inputFormat: \"hex\",\n    validInput: true,\n  });\n  const [foreground, setForeground] = useState<Color>({\n    rgb: hexToRgb(defaultColors.foreground),\n    input: defaultColors.foreground,\n    inputFormat: \"hex\",\n    validInput: true,\n  });\n\n  const [contrast, setContrast] = useState(getContrast(background.rgb, foreground.rgb));\n\n  const updateBackground = (color: Color, calcContrast = true) => {\n    const hex = colord(color.rgb).toHex();\n    setBackground(color);\n    document.documentElement.style.setProperty(\"--background\", hex);\n    calcContrast && updateContrast(color.rgb, foreground.rgb);\n  };\n\n  const updateForeground = (color: Color, calcContrast = true) => {\n    const hex = colord(color.rgb).toHex();\n    setForeground(color);\n    document.documentElement.style.setProperty(\"--foreground\", hex);\n    calcContrast && updateContrast(background.rgb, color.rgb);\n  };\n\n  const updateContrast = (backgroundRgb: RgbColor, foregroundRgb: RgbColor) => {\n    let contrast = getContrast(backgroundRgb, foregroundRgb);\n    setContrast(contrast);\n  };\n\n  const handleSwapColors = () => {\n    const oldBackground = background;\n    const oldForeground = foreground;\n    updateBackground(foreground);\n    updateForeground(oldBackground);\n    updateContrast(oldBackground.rgb, oldForeground.rgb);\n  };\n\n  // Cycle through color formats of HEX, RGB and HSL\n  const handleChangeFormat = (target: Target) => {\n    const isBackground = target === \"background\";\n\n    const color = isBackground ? background : foreground;\n    let colorInput = color.input;\n    let colorFormat = color.inputFormat;\n\n    switch (colorFormat) {\n      case \"hex\":\n        colorInput = colord(color.rgb).toRgbString();\n        colorFormat = \"rgb\";\n        break;\n      case \"rgb\":\n        colorInput = colord(color.rgb).toHslString();\n        colorFormat = \"hsl\";\n        break;\n      case \"hsl\":\n        colorInput = colord(color.rgb).toHex().toUpperCase();\n        colorFormat = \"hex\";\n        break;\n    }\n\n    const newColor = { ...color, input: colorInput, inputFormat: colorFormat, validInput: true };\n    isBackground ? updateBackground(newColor, false) : updateForeground(newColor, false);\n  };\n\n  const data = {\n    background,\n    updateBackground,\n    foreground,\n    updateForeground,\n    contrast,\n    updateContrast,\n    handleSwapColors,\n    handleChangeFormat,\n  };\n\n  return <ColorContext.Provider value={data}>{children}</ColorContext.Provider>;\n}\n\nexport { ColorContext as default, ColorContextProvider };\n","import { createContext, useState } from \"react\";\nimport { SavedColors } from \"../types/colors.types\";\n\ntype SaveContextProviderProps = {\n  children: React.ReactNode;\n};\n\ntype SaveContextType = {\n  savedColors: SavedColors;\n  setSavedColors: React.Dispatch<React.SetStateAction<SavedColors>>;\n  updateSavedColor: (color: SavedColors) => void;\n};\n\n// Context for saved colors\nconst SaveContext = createContext<SaveContextType>({} as SaveContextType);\n\nfunction SaveContextProvider({ children }: SaveContextProviderProps) {\n  const colorsInStorage = window.localStorage.getItem(\"colors\") ?? \"\";\n  const initialState: SavedColors = colorsInStorage ? JSON.parse(colorsInStorage) : [];\n\n  const [savedColors, setSavedColors] = useState(initialState);\n\n  const updateSavedColor = (colorArray: SavedColors) => {\n    setSavedColors(colorArray);\n    window.localStorage.setItem(\"colors\", JSON.stringify(colorArray));\n  };\n\n  const data = {\n    savedColors,\n    setSavedColors,\n    updateSavedColor,\n  };\n\n  return <SaveContext.Provider value={data}>{children}</SaveContext.Provider>;\n}\n\nexport { SaveContext as default, SaveContextProvider };\n","import styled from \"styled-components\";\nimport Tippy from \"@tippyjs/react/headless\";\nimport { TippyProps } from \"@tippyjs/react\";\n\ntype TooltipProps = {\n  children: React.ReactNode;\n  content: React.ReactNode;\n  tooltipBoxStyles?: React.CSSProperties;\n  wrapperStyles?: React.CSSProperties;\n} & Omit<TippyProps, \"children\">;\n\nconst TooltipBox = styled.div`\n  padding: 0.3rem 0.8rem;\n  background-color: var(--darkest-gray);\n  border-radius: 0.5rem;\n\n  /* Style the location of the tooltip arrow */\n  &[data-placement^=\"top\"] > #arrow {\n    bottom: -0.4rem;\n  }\n\n  &[data-placement^=\"bottom\"] > #arrow {\n    top: -0.4rem;\n  }\n\n  &[data-placement^=\"left\"] > #arrow {\n    right: -0.4rem;\n  }\n\n  &[data-placement^=\"right\"] > #arrow {\n    left: -0.4rem;\n  }\n`;\n\nconst Arrow = styled.div`\n  &,\n  &::before {\n    position: absolute;\n    width: 0.8rem;\n    height: 0.8rem;\n    background: inherit;\n  }\n\n  & {\n    visibility: hidden;\n  }\n\n  &::before {\n    visibility: visible;\n    content: \"\";\n    transform: rotate(45deg);\n  }\n`;\n\n// `children` component needs to wrapped by a span\n// https://github.com/atomiks/tippyjs-react#component-children\nconst ChildrenWrapper = styled.span`\n  display: inline-block;\n  height: max-content;\n`;\n\n// `children` - Component that triggers the tooltip\n// `wrapperStyles` - Styles applied to the wrapper that holds the trigger element\nfunction Tooltip({ children, content, wrapperStyles = {}, tooltipBoxStyles = {}, ...tippyProps }: TooltipProps) {\n  return (\n    <Tippy\n      render={(attrs) => (\n        <TooltipBox {...attrs} style={tooltipBoxStyles}>\n          {content}\n          <Arrow id=\"arrow\" data-popper-arrow=\"\" />\n        </TooltipBox>\n      )}\n      {...tippyProps}\n    >\n      <ChildrenWrapper style={wrapperStyles}>{children}</ChildrenWrapper>\n    </Tippy>\n  );\n}\n\nexport default Tooltip;\n","import { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { MdSwapVert } from \"react-icons/md\";\nimport ColorContext from \"../../context/ColorContext\";\nimport Tooltip from \"./Tooltip\";\n\nconst Button = styled.button`\n  width: 4rem;\n  height: 4rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: none;\n  border: none; // Use box-shadow for border instead\n  box-shadow: 0 0 0 1px var(--white);\n  border-radius: 2rem;\n  color: var(--white);\n  font-size: 0rem; // Bug fix: Arrow appear to small on mobile devices\n  transition: 150ms ease;\n  -webkit-appearance: none; // Fix iOS appearance bugs\n\n  &:hover {\n    background-color: var(--white-hover);\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--cyan);\n  }\n`;\n\nconst tooltipWrapperStyles = {\n  margin: \"2.2rem 16% 2.2rem 0\",\n};\n\nexport default function SwapButton() {\n  const { handleSwapColors } = useContext(ColorContext);\n\n  return (\n    <Tooltip\n      content={<p>Swap colors</p>}\n      trigger=\"mouseenter focusin\"\n      placement=\"right\"\n      offset={[0, 15]}\n      touch={false}\n      wrapperStyles={tooltipWrapperStyles}\n    >\n      <Button aria-label=\"Swap colors\">\n        <MdSwapVert size={28} onClick={handleSwapColors} />\n      </Button>\n    </Tooltip>\n  );\n}\n","import { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { colord, getFormat } from \"colord\";\nimport ColorContext from \"../../context/ColorContext\";\nimport { hexToRgb } from \"../../utils/colorUtils\";\nimport { AcceptedFormat, Target } from \"../../types/colors.types\";\n\ntype ColorTextInputProps = {\n  target: Target;\n};\n\nconst Input = styled.input<{ valid: boolean }>`\n  width: 85%;\n  padding: 0.5rem 0.8rem 0.5rem 5.2rem;\n  margin-right: 0.5rem;\n\n  background: var(--black);\n  border: none; // Use box-shadow for border instead\n  box-shadow: 0 0 0 1px ${(props) => (props.valid ? \"var(--gray)\" : \"var(--light-red)\")};\n  border-radius: 0.5rem;\n  color: var(--white);\n  font-family: var(--font-sans);\n  font-size: 2.3rem;\n  font-weight: 600;\n  -webkit-appearance: none; // Fix iOS appearance bugs\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px ${(props) => (props.valid ? \"var(--cyan)\" : \"var(--light-red)\")};\n  }\n`;\n\nconst HelperText = styled.p<{ visible: boolean }>`\n  position: absolute;\n  bottom: -2rem;\n  color: var(--light-red);\n  font-size: 1.4rem;\n  visibility: ${(props) => (props.visible ? \"visible\" : \"hidden\")};\n`;\n\nfunction ColorTextInput({ target }: ColorTextInputProps) {\n  const { background, updateBackground, foreground, updateForeground } = useContext(ColorContext);\n\n  const isBackground = target === \"background\";\n  const color = isBackground ? background : foreground;\n  let validInput = color.validInput;\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const input = event.target.value;\n    const inputColor = colord(input);\n\n    let rgb = hexToRgb(input);\n    let inputFormat = getFormat(input) as AcceptedFormat;\n    validInput = inputColor.isValid();\n\n    // Use values from the original color state if input is invalid\n    if (!validInput) {\n      rgb = color.rgb;\n      inputFormat = color.inputFormat;\n    }\n\n    const newState = { rgb, input, inputFormat, validInput };\n    isBackground ? updateBackground(newState) : updateForeground(newState);\n  };\n\n  return (\n    <>\n      <Input\n        type=\"text\"\n        id={target}\n        value={color.input}\n        onChange={(event) => handleInputChange(event)}\n        valid={validInput}\n        spellCheck={false}\n      />\n      <HelperText visible={!validInput}>Invalid input</HelperText>\n    </>\n  );\n}\n\nexport default ColorTextInput;\n","// Custom Tippy.js plug-ins\n// https://atomiks.github.io/tippyjs/v6/plugins/\n\nimport { Plugin } from \"tippy.js\";\n\n// Hides the tooltip when Escape key is pressed\nexport const hideOnEsc: Plugin = {\n  name: \"hideOnEsc\",\n  defaultValue: true,\n  fn(instance) {\n    function onKeyDown(event: KeyboardEvent) {\n      if (event.code === \"Escape\") {\n        instance.hide();\n      }\n    }\n\n    return {\n      onShow() {\n        document.addEventListener(\"keydown\", onKeyDown);\n      },\n      onHide() {\n        document.removeEventListener(\"keydown\", onKeyDown);\n      },\n    };\n  },\n};\n","import { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { RgbColor, RgbColorPicker } from \"react-colorful\";\nimport { colord } from \"colord\";\nimport Tooltip from \"./Tooltip\";\nimport ColorContext from \"../../context/ColorContext\";\nimport { getColorString } from \"../../utils/colorUtils\";\nimport { hideOnEsc } from \"./tooltipPlugins\";\nimport { Target } from \"../../types/colors.types\";\n\ntype ColorPickerProps = {\n  target: Target;\n};\n\nconst PickerButton = styled.button<{ target: Target }>`\n  width: 3rem;\n  height: 3rem;\n  background: ${(props) => (props.target === \"background\" ? \"var(--background)\" : \"var(--foreground)\")};\n  border: none; // Use box-shadow for border instead\n  box-shadow: 0 0 0 1px var(--gray);\n  border-radius: 0.5rem;\n  -webkit-appearance: none; // Fix iOS appearance bugs\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 2px var(--cyan);\n  }\n`;\n\nconst RgbPicker = styled(RgbColorPicker)`\n  &.react-colorful {\n    width: 25rem;\n    cursor: crosshair;\n  }\n`;\n\n// Special inline styles for tooltip\nconst styles = {\n  buttonWrapper: {\n    position: \"absolute\",\n    left: \"0.8rem\",\n  } as React.CSSProperties,\n  tooltipBox: {\n    padding: \"1rem\",\n    borderRadius: \"0.8rem\",\n  },\n};\n\nfunction ColorPicker({ target }: ColorPickerProps) {\n  const { background, updateBackground, foreground, updateForeground } = useContext(ColorContext);\n\n  const isBackground = target === \"background\";\n  const targetColor = isBackground ? background : foreground;\n\n  const handlePickerChange = (color: RgbColor) => {\n    // Uses the same color format as the text input\n    const inputFormat = targetColor.inputFormat;\n    const inputValue = getColorString(colord(color), inputFormat);\n\n    // No error validation is needed if we use color picker\n    const newState = { rgb: color, input: inputValue, inputFormat, validInput: true };\n    isBackground ? updateBackground(newState) : updateForeground(newState);\n  };\n\n  const rgbPicker = <RgbPicker color={targetColor.rgb} onChange={(color) => handlePickerChange(color)} />;\n\n  return (\n    <Tooltip\n      content={rgbPicker}\n      trigger=\"click\"\n      placement=\"bottom\"\n      offset={[100, 5]}\n      interactive={true}\n      wrapperStyles={styles.buttonWrapper}\n      tooltipBoxStyles={styles.tooltipBox}\n      plugins={[hideOnEsc]}\n      appendTo={() => document.getElementById(`picker-root-${target}`)!}\n    >\n      <PickerButton target={target} aria-label=\"Open color picker\" />\n    </Tooltip>\n  );\n}\n\nexport default ColorPicker;\n","import { MdContentCopy } from \"react-icons/md\";\nimport styled from \"styled-components\";\nimport copyToClipboard from \"copy-text-to-clipboard\";\nimport Tooltip from \"./Tooltip\";\nimport { Target } from \"../../types/colors.types\";\n\ntype CopyButtonProps = {\n  target: Target;\n};\n\nconst Button = styled.button`\n  padding: 0.8rem;\n  background: none;\n  color: var(--gray);\n  transition: 150ms color ease;\n\n  &:hover,\n  &:focus {\n    color: var(--cyan);\n  }\n`;\n\nfunction CopyButton({ target }: CopyButtonProps) {\n  return (\n    <Tooltip\n      content={<p>Copied to clipboard</p>}\n      trigger=\"click\"\n      offset={[-40, 14]}\n      onShow={(instance) => {\n        setTimeout(() => instance.hide(), 2000);\n      }}\n      hideOnClick={false}\n    >\n      <Button\n        onClick={(event) => {\n          const inputEl = document.getElementById(target)! as HTMLInputElement;\n          const inputValue = inputEl.value;\n          copyToClipboard(inputValue);\n          event.currentTarget.blur();\n        }}\n        aria-label=\"Copy to clipboard\"\n      >\n        <MdContentCopy size={24} />\n      </Button>\n    </Tooltip>\n  );\n}\n\nexport default CopyButton;\n","import styled from \"styled-components\";\nimport { MdColorLens } from \"react-icons/md\";\nimport Tooltip from \"./Tooltip\";\nimport { useContext } from \"react\";\nimport ColorContext from \"../../context/ColorContext\";\nimport { Target } from \"../../types/colors.types\";\n\ntype FormatButtonProps = {\n  target: Target;\n};\n\nconst Button = styled.button`\n  padding: 0.8rem;\n  background: none;\n  color: var(--gray);\n  transition: 150ms color ease;\n\n  &:hover,\n  &:focus {\n    color: var(--cyan);\n  }\n`;\n\nfunction FormatButton({ target }: FormatButtonProps) {\n  const { handleChangeFormat } = useContext(ColorContext);\n\n  return (\n    <Tooltip content={<p>Change color format</p>} offset={[-40, 14]} trigger=\"mouseenter focusin\">\n      <Button onClick={() => handleChangeFormat(target)} aria-label=\"Change color format\">\n        <MdColorLens size={24} />\n      </Button>\n    </Tooltip>\n  );\n}\n\nexport default FormatButton;\n","import styled from \"styled-components\";\nimport ColorTextInput from \"../atoms/ColorTextInput\";\nimport ColorPicker from \"../atoms/ColorPicker\";\nimport CopyButton from \"../atoms/CopyButton\";\nimport FormatButton from \"../atoms/FormatButton\";\nimport { Target } from \"../../types/colors.types\";\n\ntype ColorInputFieldProps = {\n  target: Target;\n};\n\nconst Container = styled.div`\n  width: 100%;\n  margin-bottom: 2rem;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  position: relative;\n`;\n\nconst ButtonGroup = styled.div`\n  margin-top: 0.5rem;\n  display: flex;\n`;\n\nfunction ColorInputField({ target }: ColorInputFieldProps) {\n  return (\n    <Container>\n      <ColorTextInput target={target} />\n      <ColorPicker target={target} />\n      <div id={`picker-root-${target}`} />\n      <ButtonGroup>\n        <FormatButton target={target} />\n        <CopyButton target={target} />\n      </ButtonGroup>\n    </Container>\n  );\n}\n\nexport default ColorInputField;\n","import styled from \"styled-components\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport Tooltip from \"../atoms/Tooltip\";\n\ntype InputLabelProps = {\n  labelFor: string;\n  title: string;\n  tooltipText: string;\n};\n\nconst Container = styled.div`\n  margin-bottom: 0.8rem;\n  display: flex;\n  align-items: center;\n  color: var(--gray);\n`;\n\nconst Label = styled.label`\n  margin-right: 1.2rem;\n  font-size: 1.8rem;\n  font-weight: 600;\n  color:#000000;\n`;\n\nconst InfoIcon = styled(MdInfoOutline)`\n  transition: 150ms color ease;\n\n  &:hover,\n  &:focus {\n    color: var(--cyan);\n    outline: none;\n  }\n`;\n\nconst tooltipWrapperStyles = {\n  height: \"1.8rem\",\n};\n\nfunction InputLabel({ labelFor, title, tooltipText }: InputLabelProps) {\n  return (\n    <Container>\n      <Label htmlFor={labelFor}>{title}</Label>\n      {tooltipText !== undefined ? (\n        <Tooltip\n          placement={window.innerWidth >= 330 ? \"right\" : \"top\"}\n          content={<p>{tooltipText}</p>}\n          wrapperStyles={tooltipWrapperStyles}\n          trigger=\"mouseenter focusin\"\n        >\n          <InfoIcon size={18} tabIndex={0} />\n        </Tooltip>\n      ) : null}\n    </Container>\n  );\n}\n\nexport default InputLabel;\n","export const bp = {\n  sm: \"479px\",\n  md: \"767px\",\n  lg: \"1079px\",\n};\n","import styled from \"styled-components\";\nimport SwapButton from \"../atoms/SwapButton\";\nimport ColorInputField from \"../molecules/ColorInputField\";\nimport InputLabel from \"../molecules/InputLabel\";\nimport { bp } from \"../../styles/breakpoints\";\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 35rem;\n  padding-bottom: 1rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (min-width: ${bp.md}) and (max-width: ${bp.lg}) {\n    max-width: 32rem;\n  }\n`;\n\nconst ColorInputBlock = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  &:last-child {\n    margin-bottom: 3.5rem;\n\n    @media (min-width: ${bp.md}) and (max-width: ${bp.lg}) {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nexport default function ColorInputs() {\n  return (\n    <Container>\n      <ColorInputBlock>\n        <InputLabel title=\"Background\" labelFor=\"background\" tooltipText=\"Accepts HEX, RGB & HSL\" />\n        <ColorInputField target=\"background\" />\n      </ColorInputBlock>\n      <SwapButton />\n      <ColorInputBlock>\n        <InputLabel title=\"Foreground\" labelFor=\"foreground\" tooltipText=\"Accepts HEX, RGB & HSL\" />\n        <ColorInputField target=\"foreground\" />\n      </ColorInputBlock>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\n\ntype OutlineButtonProps = {\n  anchor?: boolean;\n  children: string;\n  color?: string;\n  hoverColor?: string;\n  hrefLink?: string;\n  icon?: React.ReactNode;\n  onClickEvent?: () => void;\n};\n\nconst Button = styled.button<{ hasIcon: boolean; foreground: string; hoverColor?: string }>`\n  width: max-content;\n  padding: ${(props) => (props.hasIcon ? \"0.7rem 1.4rem 0.7rem 1.2rem\" : \"0.7rem 1.2rem\")};\n  display: flex;\n  align-items: center;\n  gap: 0.8rem;\n  background: none;\n  border: 1px solid ${(props) => props.foreground};\n  border-radius: 0.5rem;\n  color: ${(props) => props.foreground};\n  cursor: pointer;\n  font-weight: 600;\n  font-size: 1.6rem;\n  transition: background-color 150ms ease;\n\n  &:hover {\n    ${(props) => `background-color: ${props.hoverColor}`};\n  }\n\n  &:focus {\n    outline: 3px solid var(--cyan);\n    ${(props) => `background-color: ${props.hoverColor}`};\n  }\n`;\n\nfunction OutlineButton({\n  anchor = false,\n  children,\n  color = \"var(--white)\",\n  hoverColor,\n  hrefLink,\n  icon,\n  onClickEvent,\n}: OutlineButtonProps) {\n  // Additional props if we cast the button into an anchor tag\n  const anchorProps = anchor\n    ? {\n        href: hrefLink,\n        target: \"_blank\",\n        rel: \"noreferrer\",\n      }\n    : {};\n\n  return (\n    <Button\n      {...anchorProps}\n      as={anchor ? \"a\" : \"button\"}\n      foreground={color}\n      hoverColor={hoverColor}\n      hasIcon={icon !== undefined}\n      onClick={onClickEvent}\n    >\n      {icon}\n      <span>{children}</span>\n    </Button>\n  );\n}\n\nexport default OutlineButton;\n","import { useContext } from \"react\";\nimport { MdDelete } from \"react-icons/md\";\nimport OutlineButton from \"./OutlineButton\";\nimport SaveContext from \"../../context/SaveContext\";\n\nexport default function DeleteAllButton() {\n  const { updateSavedColor } = useContext(SaveContext);\n\n  const handleOnclick = () => {\n    updateSavedColor([]);\n  };\n\n  return (\n    <OutlineButton\n      color=\"var(--light-red)\"\n      hoverColor=\"var(--light-red-hover)\"\n      icon={<MdDelete size={18} />}\n      onClickEvent={handleOnclick}\n    >\n      Delete All\n    </OutlineButton>\n  );\n}\n","import { useContext } from \"react\";\nimport { MdSave } from \"react-icons/md\";\nimport OutlineButton from \"./OutlineButton\";\nimport ColorContext from \"../../context/ColorContext\";\nimport SaveContext from \"../../context/SaveContext\";\n\nexport default function SaveButton() {\n  const { savedColors, updateSavedColor } = useContext(SaveContext);\n  const { background, foreground } = useContext(ColorContext);\n\n  const MAX_SAVED_COLORS = 10;\n\n  const handleOnclick = () => {\n    const newSavedColors = [...savedColors, { background, foreground, time: Date.now() }];\n\n    if (newSavedColors.length > MAX_SAVED_COLORS) {\n      newSavedColors.shift(); // Remove the first item\n    }\n\n    updateSavedColor(newSavedColors);\n  };\n\n  return (\n    <OutlineButton\n      color=\"var(--green)\"\n      hoverColor=\"var(--green-hover)\"\n      icon={<MdSave size={18} />}\n      onClickEvent={handleOnclick}\n    >\n      Save Color\n    </OutlineButton>\n  );\n}\n","import styled from \"styled-components\";\nimport DeleteAllButton from \"../atoms/DeleteAllButton\";\nimport SaveButton from \"../atoms/SaveButton\";\n\nconst ButtonGroup = styled.div`\n  margin: 2.5rem 0 3.5rem;\n  display: flex;\n  gap: 1.5rem 2.5rem;\n  flex-wrap: wrap;\n`;\n\nfunction SaveButtonGroup() {\n  return (\n    <ButtonGroup>\n      <SaveButton />\n      <DeleteAllButton />\n    </ButtonGroup>\n  );\n}\n\nexport default SaveButtonGroup;\n","import styled from \"styled-components\";\nimport { MdClose } from \"react-icons/md\";\n\ntype ColorTileProps = {\n  background: string;\n  foreground: string;\n  handleLoad: () => void;\n  handleDelete: () => void;\n};\n\nconst Container = styled.div`\n  position: relative;\n  width: max-content;\n`;\n\nconst TileBtn = styled.button<{ bg: string; fg: string }>`\n  width: 5.5rem;\n  height: 5.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid ${(props) => props.fg};\n  border-radius: 0.5rem;\n  background-color: ${(props) => props.bg};\n  color: ${(props) => props.fg};\n  font-size: 2rem;\n  font-weight: bold;\n\n  &:focus {\n    outline: 3px solid var(--cyan);\n  }\n`;\n\nconst DeleteBtn = styled.button`\n  width: 2rem;\n  height: 2rem;\n  padding: 0;\n  position: absolute;\n  top: -1rem;\n  right: -1rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--red);\n  border: 1px solid var(--white);\n  border-radius: 1rem;\n  color: var(--white);\n\n  &:focus {\n    outline: 3px solid var(--cyan);\n  }\n`;\n\nfunction ColorTile({ background, foreground, handleLoad, handleDelete }: ColorTileProps) {\n  return (\n    <Container>\n      <TileBtn\n        bg={background}\n        fg={foreground}\n        onClick={handleLoad}\n        aria-label={`Background ${background} with foreground ${foreground}`}\n      >\n        Aa\n      </TileBtn>\n      <DeleteBtn onClick={handleDelete} aria-label=\"Delete saved color\">\n        <MdClose size={12} />\n      </DeleteBtn>\n    </Container>\n  );\n}\n\nexport default ColorTile;\n","import { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport ColorContext from \"../../context/ColorContext\";\nimport SaveContext from \"../../context/SaveContext\";\nimport ColorTile from \"../atoms/ColorTile\";\nimport { getRgbString } from \"../../utils/colorUtils\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 2rem;\n  flex-wrap: wrap;\n`;\n\nfunction ColorSwatch() {\n  const { updateBackground, updateForeground, updateContrast } = useContext(ColorContext);\n  const { savedColors, setSavedColors } = useContext(SaveContext);\n\n  // Load saved color. Every saved color stores a property called `key`, which is a timestamp\n  const handleLoad = (key: number) => {\n    const { background, foreground } = savedColors.find((color) => color.time === key)!;\n\n    // Do not update contrast in `updateBackground` and `updateForeground` since state update is async.\n    updateBackground(background, false);\n    updateForeground(foreground, false);\n    updateContrast(background.rgb, foreground.rgb);\n  };\n\n  // Delete saved color\n  const handleDelete = (key: number) => {\n    const color = savedColors.find((color) => color.time === key)!;\n    const index = savedColors.indexOf(color);\n\n    // Remove the selected color object\n    const newSavedColors = [...savedColors];\n    newSavedColors.splice(index, 1); // Remove the saved color\n    setSavedColors(newSavedColors);\n    window.localStorage.setItem(\"colors\", JSON.stringify(newSavedColors));\n  };\n\n  return (\n    <Container>\n      {savedColors.map((color) => (\n        <ColorTile\n          key={color.time}\n          background={getRgbString(color.background.rgb)}\n          foreground={getRgbString(color.foreground.rgb)}\n          handleLoad={() => handleLoad(color.time)}\n          handleDelete={() => handleDelete(color.time)}\n        />\n      ))}\n    </Container>\n  );\n}\n\nexport default ColorSwatch;\n","import styled from \"styled-components\";\nimport SaveButtonGroup from \"../molecules/SaveButtonGroup\";\nimport ColorSwatch from \"../molecules/ColorSwatch\";\nimport { bp } from \"../../styles/breakpoints\";\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 36rem;\n  padding-top: 1rem;\n\n  @media (min-width: 900px) and (max-width: ${bp.lg}) {\n    padding-top: 0;\n    max-width: 38rem;\n  }\n\n  @media (min-width: ${bp.md}) and (max-width: 900px) {\n    padding-top: 0;\n    padding-left: 2rem;\n    max-width: 32rem;\n  }\n`;\n\nexport default function SavedColors() {\n  return (\n    <Container id=\"saved-colors\">\n      <h2>Saved Colors</h2>\n      <SaveButtonGroup />\n      <ColorSwatch />\n    </Container>\n  );\n}\n","import { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport ColorContext from \"../../context/ColorContext\";\nimport { bp } from \"../../styles/breakpoints\";\n\nconst Container = styled.div`\n  width: 9.5rem;\n  position: relative;\n\n  @media (max-width: ${bp.md}) {\n    width: 9rem;\n  }\n`;\n\nconst Value = styled.p`\n  display: inline-block;\n  color: var(--white);\n  font-size: 3.2rem;\n  font-weight: 600;\n\n  @media (max-width: ${bp.md}) {\n    font-size: 3rem;\n  }\n`;\n\nconst OutOf = styled.p`\n  position: absolute;\n  bottom: 0.6rem;\n  right: 0;\n  display: inline-block;\n  color: var(--gray);\n  font-size: 1.4rem;\n`;\n\nexport default function Ratio() {\n  let { contrast } = useContext(ColorContext);\n  const roundedContrast = (Math.round(contrast * 10) / 10).toFixed(1); // Round to 1 decimal place\n\n  return (\n    <Container>\n      <Value>{roundedContrast}</Value>\n      <OutOf>/21</OutOf>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\nimport Ratio from \"../atoms/Ratio\";\nimport { bp } from \"../../styles/breakpoints\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  @media (max-width: ${bp.md}) {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nconst Label = styled.p`\n  margin-bottom: 1.5rem;\n  margin-right: 0;\n  color: var(--gray);\n  font-size: 1.8rem;\n  font-weight: 600;\n\n  @media (max-width: ${bp.md}) {\n    margin-bottom: 0;\n    margin-right: 4.5rem;\n    font-size: 1.6rem;\n  }\n`;\n\nexport default function ContrastRatio() {\n  return (\n    <Container>\n      <Label>Contrast Ratio</Label>\n      <Ratio />\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\n\ntype PreviewTextProps = {\n  children: string;\n  title: string;\n  largeText?: boolean;\n};\n\nconst Container = styled.div<{ largeText: boolean }>`\n  margin-bottom: 4rem;\n  font-size: ${(props) => (props.largeText ? \"18pt\" : \"16px\")};\n`;\n\nconst Text = styled.p`\n  color: var(--foreground);\n`;\n\nconst Title = styled(Text)`\n  margin-bottom: 1.5rem;\n  font-weight: bold;\n`;\n\nfunction PreviewText({ children, title, largeText = false }: PreviewTextProps) {\n  return (\n    <Container largeText={largeText}>\n      <Title>{title}</Title>\n      <Text>{children}</Text>\n    </Container>\n  );\n}\n\nexport default PreviewText;\n","import { memo } from \"react\";\nimport styled from \"styled-components\";\nimport { MdCheck, MdClose } from \"react-icons/md\";\nimport { bp } from \"../../styles/breakpoints\";\n\ntype RatingProps = {\n  pass: boolean;\n};\n\nconst Container = styled.div<{ pass: boolean }>`\n  display: flex;\n  align-items: center;\n  color: ${(props) => (props.pass ? \"var(--green)\" : \"var(--light-red)\")};\n`;\n\nconst Text = styled.p`\n  margin-left: 0.3rem;\n  font-size: 2.4rem;\n  font-weight: 600;\n\n  @media (max-width: ${bp.md}) {\n    font-size: 2.2rem;\n  }\n`;\n\nfunction Rating({ pass }: RatingProps) {\n  return (\n    <Container pass={pass}>\n      {pass ? <MdCheck size={28} /> : <MdClose size={28} />}\n      <Text>{pass ? \"Pass\" : \"Fail\"}</Text>\n    </Container>\n  );\n}\n\nexport default memo(Rating);\n","import { useContext } from \"react\";\nimport ColorContext from \"../../context/ColorContext\";\nimport Rating from \"../atoms/Rating\";\nimport Tooltip from \"../atoms/Tooltip\";\nimport { getWcagRatings } from \"../../utils/colorUtils\";\n\nexport default function WcagResults() {\n  const { contrast } = useContext(ColorContext);\n\n  const [aaNormal, aaLarge, aaaNormal, aaaLarge] = getWcagRatings(contrast);\n\n  // Table is styled in GlobalStyles.ts for faster performance\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th></th>\n          <th>Normal Text</th>\n          <th>\n            <Tooltip content={<p>Text of ≥18pt or ≥14pt if bold</p>} placement=\"bottom\" trigger=\"mouseenter focusin\">\n              <p tabIndex={0}>Large Text</p>\n            </Tooltip>\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>AA</td>\n          <td>\n            <Rating pass={aaNormal} />\n          </td>\n          <td>\n            <Rating pass={aaLarge} />\n          </td>\n        </tr>\n        <tr>\n          <td>AAA</td>\n          <td>\n            <Rating pass={aaaNormal} />\n          </td>\n          <td>\n            <Rating pass={aaaLarge} />\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n","import styled from \"styled-components\";\nimport { MdOpenInNew } from \"react-icons/md\";\nimport OutlineButton from \"../atoms/OutlineButton\";\nimport ContrastRatio from \"../molecules/ContrastRatio\";\nimport PreviewText from \"../molecules/PreviewText\";\nimport WcagResults from \"../molecules/WcagResults\";\nimport { bp } from \"../../styles/breakpoints\";\n\nconst Container = styled.div`\n  max-width: 75rem;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  @media (max-width: ${bp.lg}) {\n    max-width: none;\n    width: 100%;\n  }\n`;\n\nconst Results = styled.div`\n  order: 2;\n  margin-bottom: 5rem;\n  padding: 2rem 5.5rem;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 2.5rem 7rem;\n  background-color: var(--black);\n  border: 1px solid var(--dark-gray);\n  border-radius: 1rem;\n\n  @media (max-width: ${bp.lg}) {\n    order: 3;\n    margin-bottom: 0;\n  }\n\n  @media (max-width: ${bp.md}) {\n    padding: 2rem;\n    flex-direction: column;\n  }\n`;\n\nconst Preview = styled.div`\n  width: 100%;\n  order: 3;\n\n  @media (max-width: ${bp.lg}) {\n    order: 2;\n  }\n`;\n\nconst Links = styled.div`\n  margin-bottom: 0;\n  display: flex;\n  align-self: flex-start;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 1.5rem 2.5rem;\n\n  @media (max-width: ${bp.lg}) {\n    margin-bottom: 4.5rem;\n  }\n`;\n\nexport default function PreviewContent() {\n  return (\n    <Container id=\"preview\">\n      <h1>Color Contrast Checker</h1>\n      <Results>\n        <ContrastRatio />\n        <WcagResults />\n      </Results>\n      <Preview>\n        <PreviewText largeText title=\"Large Text - 24px/18pt\">\n          Contrast ratio is a measure of the difference in perceived brightness between two colors. The higher the\n          ratio, the better the contrast.\n        </PreviewText>\n        <PreviewText title=\"Normal Text - 16px\">\n          According to Web Content Accessibility Guidelines (WCAG) 2.0, text and images of text should have a minimum\n          contrast ratio of 4.5:1 (Level AA), while large text should have minimum contrast ratio of 3:1. For enhanced\n          contrast (Level AAA), normal text and large text should have minimum contrast ratio of 7:1 and 4.5:1\n          respectively.\n        </PreviewText>\n        <Links>\n          <OutlineButton\n            anchor\n            hrefLink=\"https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html\"\n            color=\"var(--foreground)\"\n            icon={<MdOpenInNew size={18} />}\n          >\n            WCAG 2.0\n          </OutlineButton>\n          <OutlineButton\n            anchor\n            hrefLink=\"https://webaim.org/articles/contrast/\"\n            color=\"var(--foreground)\"\n            icon={<MdOpenInNew size={18} />}\n          >\n            WebAIM article\n          </OutlineButton>\n        </Links>\n      </Preview>\n    </Container>\n  );\n}\n","import styled from \"styled-components\";\nimport { FaGithub } from \"react-icons/fa\";\n\nconst FooterContainer = styled.footer`\n  margin-top: auto;\n  display: flex;\n  align-items: center;\n  color: var(--white);\n`;\n\nconst GitHubLink = styled.a`\n  color: var(--white);\n  transition: 150ms ease;\n\n  &:hover,\n  &:focus {\n    color: var(--cyan);\n  }\n`;\n\nconst Text = styled.p`\n  padding-left: 3rem;\n  margin-left: auto;\n  color: var(--gray);\n  font-size: 1.4rem;\n`;\n\nconst TextLink = styled.a`\n  position: relative;\n  color: var(--cyan);\n\n  // Animated underline effect on hover\n  &::after {\n    content: \"\";\n    width: 100%;\n    height: 0.1rem;\n    position: absolute;\n    bottom: 0.1rem;\n    left: 0;\n    right: 0;\n    background-color: var(--cyan);\n    transform: scaleX(0);\n    transition: 150ms ease;\n  }\n\n  &:hover,\n  &:focus {\n    &::after {\n      transform: scaleX(1);\n    }\n  }\n`;\n\nexport default function Footer() {\n  return (\n    <FooterContainer>\n      {/* <GitHubLink\n        title=\"View source on GitHub\"\n        href=\"https://github.com/AnsonH/contrast-checker\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <FaGithub size={30} />\n      </GitHubLink>\n      <Text>\n        Created by{\" \"}\n        <TextLink href=\"https://www.ansonheung.me/\" target=\"_blank\" rel=\"noreferrer\">\n          Anson Heung\n        </TextLink>\n      </Text> */}\n    </FooterContainer>\n  );\n}\n","import styled from \"styled-components\";\n\nconst SkipLink = styled.a`\n  padding: 1.5rem 2rem;\n  position: absolute;\n  top: -6rem;\n  background-color: var(--cyan);\n  border-radius: 0.5rem;\n  color: var(--black);\n  font-size: 1.6rem;\n  font-weight: 600;\n  z-index: 999;\n  transition: transform 150ms ease;\n\n  &:focus,\n  &:active {\n    transform: translateY(120%);\n    outline: none;\n  }\n`;\n\nexport default SkipLink;\n","import { createGlobalStyle } from \"styled-components\";\nimport variables from \"./theme\";\nimport { bp } from \"./breakpoints\";\n\nconst GlobalStyles = createGlobalStyle`\n  ${variables};\n\n  html {\n    font-size: 62.5%; // If default font size is 16px, then 1rem = 10px\n    box-sizing: border-box;\n  }\n\n  *, *::before, *::after {\n    box-sizing: inherit;\n  }\n\n  body {\n    margin: 0;\n    padding: 0;\n    color: var(--white);\n    font-family: var(--font-sans);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  h1 {\n    margin: 0 0 4.5rem;\n    color: var(--foreground);\n    font-size: 4.6rem;\n    text-align: center;\n\n    @media (max-width: ${bp.md}) {\n      font-size: 3.8rem;\n    }\n  }\n\n  h2 {\n    margin: 0;\n    color: #000000;\n    font-size: 2.6rem;\n    font-weight: 600;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  button {\n    border: none;\n    cursor: pointer;\n    font-family: var(--font-sans);\n    outline: none;\n  }\n\n  table {\n    color: var(--gray);\n    border-spacing: 0;\n    font-size: 1.8rem;\n\n    @media (max-width: ${bp.md}) {\n      font-size: 1.6rem;\n    }\n  }\n\n  th, td {\n    padding: 0.8rem 3rem 0.8rem 1rem;\n\n    &:last-child {\n      padding-right: 1.5rem;\n    }\n\n    @media (max-width: ${bp.md}) {\n      padding-right: 1.5rem;\n    }\n  }\n\n  th {\n    font-weight: 600;\n  }\n\n  td {\n    border-top: 1px solid var(--dark-gray);\n\n    &:first-child {\n      font-weight: 600;\n    }\n  }\n\n  // Targets all tooltips (React Tippy) \n  div[id^=\"tippy\"] {\n    p {\n      font-size: 1.4rem;\n    }\n  }\n\n`;\n\nexport default GlobalStyles;\n","import styled from \"styled-components\";\nimport { ColorContextProvider } from \"./context/ColorContext\";\nimport { SaveContextProvider } from \"./context/SaveContext\";\nimport ColorInputs from \"./components/organisms/ColorInputs\";\nimport SavedColors from \"./components/organisms/SavedColors\";\nimport PreviewContent from \"./components/organisms/PreviewContent\";\nimport Footer from \"./components/molecules/Footer\";\nimport SkipLink from \"./components/atoms/SkipLink\";\nimport GlobalStyles from \"./styles/GlobalStyles\";\nimport { bp } from \"./styles/breakpoints\";\n\nconst Container = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: row;\n  position: relative;\n\n  @media (max-width: ${bp.lg}) {\n    flex-direction: column;\n  }\n`;\n\nconst ColorControlSection = styled.section`\n  width: 30%;\n  min-height: 100vh;\n  order: 1;\n  padding: 4rem 4rem 3rem;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  background-color: var(--black);\n  border-right: 1px solid var(--dark-gray);\n  border-top: none;\n  overflow-y: auto; // Add scrollbar if overflows\n  background-color:#ffffff;\n\n  @media (max-width: ${bp.lg}) {\n    min-height: auto;\n    width: 100%;\n    padding: 4.5rem 6vw 3rem;\n    order: 2;\n    border-right: none;\n    border-top: 1px solid var(--dark-gray);\n    overflow-y: visible;\n  }\n`;\n\nconst ColorControl = styled.div`\n  padding-bottom: 8rem;\n  display: flex;\n  flex-direction: column;\n\n  @media (max-width: ${bp.lg}) {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n\n  @media (max-width: ${bp.md}) {\n    flex-direction: column;\n  }\n`;\n\nconst Divider = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: var(--dark-gray);\n\n  @media (min-width: ${bp.md}) and (max-width: ${bp.lg}) {\n    width: 1px;\n    height: auto;\n  }\n`;\n\nconst PreviewSection = styled.section`\n  width: 70%;\n  min-height: 100vh;\n  padding: 3.5rem;\n  order: 2;\n  background-color: var(--background);\n  overflow-y: auto;\n\n  @media (max-width: ${bp.lg}) {\n    min-height: auto;\n    width: 100%;\n    padding: 3rem 6vw 4.5rem;\n    order: 1;\n    overflow-y: visible;\n  }\n`;\n\nexport default function App() {\n  return (\n    <ColorContextProvider>\n      <GlobalStyles />\n      <Container>\n        <SkipLink href=\"#saved-colors\">Skip to Saved Colors</SkipLink>\n        <SkipLink href=\"#preview\">Skip to Preview Area</SkipLink>\n        <ColorControlSection>\n          <ColorControl>\n            <ColorInputs />\n            <Divider />\n            <SaveContextProvider>\n              <SavedColors />\n            </SaveContextProvider>\n          </ColorControl>\n          <Footer />\n        </ColorControlSection>\n        <PreviewSection>\n          <PreviewContent />\n        </PreviewSection>\n      </Container>\n    </ColorContextProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}